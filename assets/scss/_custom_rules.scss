// 此文件最后加载，用于自定义样式，覆盖主题的默认设置

figure {
    margin: 0;
}

body[data-theme='dark'] img {
    filter: brightness(80%);
}

// 中文字体
@font-face {
    font-family: jinkaiFont;
    src: url("../../fonts/jinkai.ttf") format("TrueType");
}

// 英文字体
@font-face {
    font-family: Josefin sans;
    src: url("../../fonts/JosefinSans-SemiBold.ttf") format("TrueType");
}

// 博客标题
@font-face {
    font-family: Bradley Hand ITC;
    src: url("../../fonts/bradhitc.ttf") format("TrueType");
}

// 等宽字体(代码)
@font-face {
    font-family: Fira Code;
    src: url("../../fonts/FiraCode-Regular.ttf") format("TrueType");
}

/* custom prism theme */

@mixin prism-light {
  --prism-grey: #93a1a1;
  --prism-blue: #7c91bd;
  --prism-cyan: #8b81c3;
  --prism-entity: #657b83;
  --prism-green: #51a2a0;
  --prism-yellow: #ee7800;
  --prism-orange: #e45435;

  --color-scroll-bg: #f0f0f0;
  --color-scroll-thumb: #cdcdcd;
  --color-scroll-hover: #a6a6a6;
  --color-scroll-focus: #606060;
}

@mixin prism-dark {
  --prism-grey: #93a1a1;
  --prism-blue: #95abd7;
  --prism-cyan: #bab1df;
  --prism-entity: #657b83;
  --prism-green: #8ec298;
  --prism-yellow: #e3c26a;
  --prism-orange: #ee869a;

  --color-scroll-bg: #3c3f45;
  --color-scroll-thumb: #888a8d;
  --color-scroll-hover: #75777a;
  --color-scroll-focus: #535559;
}

body[data-theme='auto'] {
  @include prism-light();

  @media (prefers-color-scheme: dark) {
    @include prism-dark();
  }
}
body[data-theme='light'] {
  @include prism-light();
}
body[data-theme='dark'] {
  @include prism-dark();
}

.token.important,
.token.bold {
  font-weight: 600;
}
.token.italic {
  font-style: italic;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: var(--prism-grey);
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: var(--prism-blue);
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.url,
.token.inserted {
  color: var(--prism-cyan);
}

.token.entity {
  color: var(--prism-entity);
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: var(--prism-green);
}

.token.function,
.token.class-name {
  color: var(--prism-yellow);
}

.token.regex,
.token.important,
.token.variable {
  color: var(--prism-orange);
}

/* custom scrollbar */

@mixin customScrollbar($direction: 'all') {
    // firefox
    scrollbar-width: thin;

    // webkit
    @media (pointer: fine) {
        &::-webkit-scrollbar {
            background-color: var(--color-scroll-bg);
            @if $direction == 'x' {
                height: 0.5rem;
            } @else if $direction == 'y' {
                width: 0.5rem;
            } @else {
                height: 0.5rem;
                width: 0.5rem;
            }
        }
        &::-webkit-scrollbar-thumb {
            background-color: var(--color-scroll-thumb);
            @if $direction == 'x' {
                min-width: 3rem;
            } @else if $direction == 'y' {
                min-height: 3rem;
            } @else {
                min-height: 3rem;
                min-width: 3rem;
            }
            &:hover {
                background-color: var(--color-scroll-hover);
            }
            &:active {
                background-color: var(--color-scroll-focus);
            }
        }
        &::-webkit-scrollbar-button {
            width: 0;
            height: 0;
        }
    }
}

code[class*='language-'],
pre[class*='language-'] {
    @include customScrollbar('x');
}
